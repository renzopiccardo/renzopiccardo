Reporte entrega JS 23-11-18

/**/

La funcion leerJSONLocal(file, callback) es la que carga el json local.
La primera vez lo va a buscar a la raiz /
Luego lo guarda en el localStorage
Es la funcion clave para el trabajo con JSON

Problemas: 
No cumple con el protocolo CORS implementado por Chrome
No puede cargar el JSON del disco pero si funciona en renzopiccardo.github.io
https://stackoverflow.com/questions/10752055/cross-origin-requests-are-only-supported-for-http-error-when-loading-a-local
https://fetch.spec.whatwg.org/#http-cors-protocol

Soluciones:
-Implementar CORS y standard fetch
-Utlizar firefox para testear la pagina localmente
-Crear servidor local, en mi caso utilize https://chrome.google.com/webstore/detail/web-server-for-chrome/ofhbbkphhbklhfoeikjpcbhemlocgigb?utm_source=chrome-app-launcher-info-dialog

/**/

Informacion:
-El JSON es un array de objetos, siendo cada objeto un juego con todos los atributos como titulo, precio, descripcion, fotos(direccion a directorio local) entre otros.

Como funcionan los scripts desde que se carga el index hasta que se le da a comprar a un juego:

-Por cada juego del json se crea un li con titulo, descripcion, foto, precio y un href particular para utilizar el get de parametros.
-Al hacer click en un juego se redirige a juegoDetallado.html + ?juego="nombre_juego"
-En juego detallado obtengo parametros de url.
-Teniendo el nombre del juego, busco el indice en el array de juegos donde el objeto tenga nombre = juego de la url.
-En el HTML tengo varios atributos cuyo contenido depende de cada juego, relleno los elementos con sus propiedades correspondientes al juego.
-Tambien envia un enlace custom a la pagina de compra para saber que juego se va a comprar compra.html?juego="nombre_juego"
-En compra se obtiene el juego y su precio y dependiendo de la cantidad, digital/fisico y el metodo de envio se calcula su precio+impuestos.
-Los datos se envian por POST y quedan a disposicion de ser usados.




